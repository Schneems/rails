<style type='text/css'>
  #route_table td {padding: 0 30px;}
  #route_table    {margin:  0 auto 0;}
  #route_table thead th {padding: 0 0 5px 0;}
  #path {width: 80%;}
</style>

<table id='route_table' class='route_table'>
  <thead>
    <tr>
      <th>Helper</th>
      <th>HTTP Verb</th>
      <th>Path
      </th>
      <th>Controller#Action</th>
    </tr>
    <tr>
      <th><%# Helper %>
        (<%= link_to "Path", "#", 'data-route-helper' => '_path',
                    title: "Returns a relative path (without the http or domain)" %> /
        <%= link_to "Url", "#", 'data-route-helper' => '_url',
                    title: "Returns an absolute url (with the http and domain)" %></td>)
      </th>
      <th><%# HTTP Verb %></th>
      <th><%# Path %>
        <%= text_field_tag :path %>
      </th>
      <th><%# Helper %></th>
     </tr>
  </thead>
  <tbody>
    <%= yield %>
  </tbody>
</table>

<script type='text/javascript'>
  function each(elems, func) {
    if (!elems instanceof Array) var elems = [elems];
    for(var i = elems.length; i--; ) {
      func(elems[i]);
    };
  }

  function setValOn(elems, val) {
    each(elems, function(elem) {
      elem.innerHTML = val;
    })
  }

 function onClick(elems, func) {
    each(elems, function(elem) {
      elem.onclick = func;
    })
  }

  function isPathMatch(value, element) {
    var string = element.getAttribute("data-route-path");
    var string = "/foo/:id/edit(.:format).foo"
    var string = string.replace(/\(.*\)/g,'');          // removes optional items
    var string = string.replace(/\./g, "\\.");            // escape periods
    var string = string.replace(/:[^\/\(]*/g,'(.*)');   // replaces params such as :id
    var string = string.replace(/\//g,  "\\/");            // escape slashes
    regx = new RegExp(string)
    if (regx.exec(value))

  }

  function selectPathMatches(value, elements) {
    var string = "/foo/:id/edit(.:format)"



    each(elements, function(elem){

    })
  }

  // Enables functionality to toggle between `_path` and `_url` helper suffixes
  function setupRouteToggleHelperLinks() {
    var toggleLinks = document.querySelectorAll('#route_table [data-route-helper]');
    onClick(toggleLinks, function(){
      var helperTxt   = this.getAttribute("data-route-helper");
      var helperElems = document.querySelectorAll('[data-route-name] span.helper');
      setValOn(helperElems, helperTxt);
    })
  }

  function setupPathTypeAhead() {
    var path = document.querySelector('#path');
    path.onkeyup = function(event){
      console.log(path.value);
      var elements = document.querySelectorAll('[data-route-path]');
      selectPathMatches(path.value, elements)
    }
  }

  setupRouteToggleHelperLinks();
  setupPathTypeAhead();
</script>
